FROM golang:1.22 AS builder

WORKDIR /go/src/app
COPY inbm/trtl .
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o trtl .

FROM python:3.12-slim

ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG NO_PROXY
ARG http_proxy
ARG https_proxy
ARG no_proxy

ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTPS_PROXY
ENV NO_PROXY=$NO_PROXY
ENV http_proxy=$http_proxy
ENV https_proxy=$https_proxy
ENV no_proxy=$no_proxy

# Install build essentials
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

COPY inbm/diagnostic-agent/requirements.txt /app/diagnostic-agent/requirements.txt
RUN pip config set global.proxy ${HTTP_PROXY} && \
    pip install --no-cache-dir -r /app/diagnostic-agent/requirements.txt

COPY inbm-lib /app/inbm-lib
RUN pip install --no-cache-dir -e /app/inbm-lib

RUN mkdir -p /var/cache/manageability
COPY inbm/diagnostic-agent /app/diagnostic-agent
COPY inbm/diagnostic-agent/fpm-template /

COPY --from=builder /go/src/app/trtl /usr/bin/trtl

RUN sed -i 's/level=ERROR/level=DEBUG/g' /etc/intel-manageability/public/diagnostic-agent/logging.ini

# used by INBM to detect if running in a container
ENV container=docker
ENV MQTT_HOST=mosquitto
ENV MQTT_PORT=1883
ENV USE_TLS=False
ENV PYTHONPATH=/app:/app/diagnostic-agent:/app/inbm-lib

WORKDIR /app/diagnostic-agent
CMD ["python", "-m", "diagnostic.diagnostic"]
