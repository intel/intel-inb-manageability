// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.12.4
// source: common/v1/common.proto

package pb

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation_ServiceType int32

const (
	Operation_SERVICE_TYPE_UNSPECIFIED Operation_ServiceType = 0
	Operation_SERVICE_TYPE_INBS        Operation_ServiceType = 1
	Operation_SERVICE_TYPE_OOB_AMT     Operation_ServiceType = 2
	Operation_SERVICE_TYPE_OOB_BMC     Operation_ServiceType = 3
	Operation_SERVICE_TYPE_AUTO        Operation_ServiceType = 4
)

// Enum value maps for Operation_ServiceType.
var (
	Operation_ServiceType_name = map[int32]string{
		0: "SERVICE_TYPE_UNSPECIFIED",
		1: "SERVICE_TYPE_INBS",
		2: "SERVICE_TYPE_OOB_AMT",
		3: "SERVICE_TYPE_OOB_BMC",
		4: "SERVICE_TYPE_AUTO",
	}
	Operation_ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNSPECIFIED": 0,
		"SERVICE_TYPE_INBS":        1,
		"SERVICE_TYPE_OOB_AMT":     2,
		"SERVICE_TYPE_OOB_BMC":     3,
		"SERVICE_TYPE_AUTO":        4,
	}
)

func (x Operation_ServiceType) Enum() *Operation_ServiceType {
	p := new(Operation_ServiceType)
	*p = x
	return p
}

func (x Operation_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[0].Descriptor()
}

func (Operation_ServiceType) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[0]
}

func (x Operation_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation_ServiceType.Descriptor instead.
func (Operation_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{6, 0}
}

type UpdateSystemSoftwareOperation_DownloadMode int32

const (
	UpdateSystemSoftwareOperation_DOWNLOAD_MODE_UNSPECIFIED   UpdateSystemSoftwareOperation_DownloadMode = 0
	UpdateSystemSoftwareOperation_DOWNLOAD_MODE_FULL          UpdateSystemSoftwareOperation_DownloadMode = 1 // Both download the package and install the package
	UpdateSystemSoftwareOperation_DOWNLOAD_MODE_NO_DOWNLOAD   UpdateSystemSoftwareOperation_DownloadMode = 2 // Do not download the package.  Only install.
	UpdateSystemSoftwareOperation_DOWNLOAD_MODE_DOWNLOAD_ONLY UpdateSystemSoftwareOperation_DownloadMode = 3 // Only download the package.  Do not install.
)

// Enum value maps for UpdateSystemSoftwareOperation_DownloadMode.
var (
	UpdateSystemSoftwareOperation_DownloadMode_name = map[int32]string{
		0: "DOWNLOAD_MODE_UNSPECIFIED",
		1: "DOWNLOAD_MODE_FULL",
		2: "DOWNLOAD_MODE_NO_DOWNLOAD",
		3: "DOWNLOAD_MODE_DOWNLOAD_ONLY",
	}
	UpdateSystemSoftwareOperation_DownloadMode_value = map[string]int32{
		"DOWNLOAD_MODE_UNSPECIFIED":   0,
		"DOWNLOAD_MODE_FULL":          1,
		"DOWNLOAD_MODE_NO_DOWNLOAD":   2,
		"DOWNLOAD_MODE_DOWNLOAD_ONLY": 3,
	}
)

func (x UpdateSystemSoftwareOperation_DownloadMode) Enum() *UpdateSystemSoftwareOperation_DownloadMode {
	p := new(UpdateSystemSoftwareOperation_DownloadMode)
	*p = x
	return p
}

func (x UpdateSystemSoftwareOperation_DownloadMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateSystemSoftwareOperation_DownloadMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[1].Descriptor()
}

func (UpdateSystemSoftwareOperation_DownloadMode) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[1]
}

func (x UpdateSystemSoftwareOperation_DownloadMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateSystemSoftwareOperation_DownloadMode.Descriptor instead.
func (UpdateSystemSoftwareOperation_DownloadMode) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{7, 0}
}

type SetPowerStateOperation_PowerState int32

const (
	SetPowerStateOperation_POWER_STATE_UNSPECIFIED SetPowerStateOperation_PowerState = 0
	SetPowerStateOperation_POWER_STATE_ON          SetPowerStateOperation_PowerState = 2
	SetPowerStateOperation_POWER_STATE_CYCLE       SetPowerStateOperation_PowerState = 5
	SetPowerStateOperation_POWER_STATE_OFF         SetPowerStateOperation_PowerState = 8
	SetPowerStateOperation_POWER_STATE_RESET       SetPowerStateOperation_PowerState = 10
)

// Enum value maps for SetPowerStateOperation_PowerState.
var (
	SetPowerStateOperation_PowerState_name = map[int32]string{
		0:  "POWER_STATE_UNSPECIFIED",
		2:  "POWER_STATE_ON",
		5:  "POWER_STATE_CYCLE",
		8:  "POWER_STATE_OFF",
		10: "POWER_STATE_RESET",
	}
	SetPowerStateOperation_PowerState_value = map[string]int32{
		"POWER_STATE_UNSPECIFIED": 0,
		"POWER_STATE_ON":          2,
		"POWER_STATE_CYCLE":       5,
		"POWER_STATE_OFF":         8,
		"POWER_STATE_RESET":       10,
	}
)

func (x SetPowerStateOperation_PowerState) Enum() *SetPowerStateOperation_PowerState {
	p := new(SetPowerStateOperation_PowerState)
	*p = x
	return p
}

func (x SetPowerStateOperation_PowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPowerStateOperation_PowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[2].Descriptor()
}

func (SetPowerStateOperation_PowerState) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[2]
}

func (x SetPowerStateOperation_PowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetPowerStateOperation_PowerState.Descriptor instead.
func (SetPowerStateOperation_PowerState) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{8, 0}
}

type Job_ExecutedBy int32

const (
	Job_EXECUTED_BY_UNSPECIFIED Job_ExecutedBy = 0
	Job_EXECUTED_BY_INBAND      Job_ExecutedBy = 1
	Job_EXECUTED_BY_OOB         Job_ExecutedBy = 2
)

// Enum value maps for Job_ExecutedBy.
var (
	Job_ExecutedBy_name = map[int32]string{
		0: "EXECUTED_BY_UNSPECIFIED",
		1: "EXECUTED_BY_INBAND",
		2: "EXECUTED_BY_OOB",
	}
	Job_ExecutedBy_value = map[string]int32{
		"EXECUTED_BY_UNSPECIFIED": 0,
		"EXECUTED_BY_INBAND":      1,
		"EXECUTED_BY_OOB":         2,
	}
)

func (x Job_ExecutedBy) Enum() *Job_ExecutedBy {
	p := new(Job_ExecutedBy)
	*p = x
	return p
}

func (x Job_ExecutedBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Job_ExecutedBy) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[3].Descriptor()
}

func (Job_ExecutedBy) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[3]
}

func (x Job_ExecutedBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Job_ExecutedBy.Descriptor instead.
func (Job_ExecutedBy) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{11, 0}
}

type Job_JobState int32

const (
	Job_JOB_STATE_UNSPECIFIED Job_JobState = 0
	Job_SCHEDULED             Job_JobState = 1
	Job_STARTED               Job_JobState = 2
	Job_PASSED                Job_JobState = 3
	Job_FAILED                Job_JobState = 4
)

// Enum value maps for Job_JobState.
var (
	Job_JobState_name = map[int32]string{
		0: "JOB_STATE_UNSPECIFIED",
		1: "SCHEDULED",
		2: "STARTED",
		3: "PASSED",
		4: "FAILED",
	}
	Job_JobState_value = map[string]int32{
		"JOB_STATE_UNSPECIFIED": 0,
		"SCHEDULED":             1,
		"STARTED":               2,
		"PASSED":                3,
		"FAILED":                4,
	}
)

func (x Job_JobState) Enum() *Job_JobState {
	p := new(Job_JobState)
	*p = x
	return p
}

func (x Job_JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Job_JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_common_proto_enumTypes[4].Descriptor()
}

func (Job_JobState) Type() protoreflect.EnumType {
	return &file_common_v1_common_proto_enumTypes[4]
}

func (x Job_JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Job_JobState.Descriptor instead.
func (Job_JobState) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{11, 1}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// one node could have multiple operations (SOTA, FOTA, etc) each with their own schedules
type NodeScheduledOperations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScheduledOperations []*ScheduledOperation `protobuf:"bytes,1,rep,name=scheduled_operations,json=scheduledOperations,proto3" json:"scheduled_operations,omitempty"`
	NodeId              string                `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *NodeScheduledOperations) Reset() {
	*x = NodeScheduledOperations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeScheduledOperations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeScheduledOperations) ProtoMessage() {}

func (x *NodeScheduledOperations) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeScheduledOperations.ProtoReflect.Descriptor instead.
func (*NodeScheduledOperations) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *NodeScheduledOperations) GetScheduledOperations() []*ScheduledOperation {
	if x != nil {
		return x.ScheduledOperations
	}
	return nil
}

func (x *NodeScheduledOperations) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// this is one operation with a set of times to run
type ScheduledOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Operation  `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	Schedules []*Schedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *ScheduledOperation) Reset() {
	*x = ScheduledOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledOperation) ProtoMessage() {}

func (x *ScheduledOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledOperation.ProtoReflect.Descriptor instead.
func (*ScheduledOperation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduledOperation) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ScheduledOperation) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schedule:
	//
	//	*Schedule_SingleSchedule
	//	*Schedule_RepeatedSchedule
	Schedule isSchedule_Schedule `protobuf_oneof:"schedule"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (m *Schedule) GetSchedule() isSchedule_Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (x *Schedule) GetSingleSchedule() *SingleSchedule {
	if x, ok := x.GetSchedule().(*Schedule_SingleSchedule); ok {
		return x.SingleSchedule
	}
	return nil
}

func (x *Schedule) GetRepeatedSchedule() *RepeatedSchedule {
	if x, ok := x.GetSchedule().(*Schedule_RepeatedSchedule); ok {
		return x.RepeatedSchedule
	}
	return nil
}

type isSchedule_Schedule interface {
	isSchedule_Schedule()
}

type Schedule_SingleSchedule struct {
	SingleSchedule *SingleSchedule `protobuf:"bytes,1,opt,name=single_schedule,json=singleSchedule,proto3,oneof"`
}

type Schedule_RepeatedSchedule struct {
	RepeatedSchedule *RepeatedSchedule `protobuf:"bytes,2,opt,name=repeated_schedule,json=repeatedSchedule,proto3,oneof"`
}

func (*Schedule_SingleSchedule) isSchedule_Schedule() {}

func (*Schedule_RepeatedSchedule) isSchedule_Schedule() {}

// this is different from MM's SingleSchedule in that it is using google's Timestamp
type SingleSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This will be created by MJunct.  This will be empty coming into MJunct NB API.  Else, it should have a string value.
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// to specify running immeidate, omit start time and end time
	StartTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SingleSchedule) Reset() {
	*x = SingleSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleSchedule) ProtoMessage() {}

func (x *SingleSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleSchedule.ProtoReflect.Descriptor instead.
func (*SingleSchedule) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *SingleSchedule) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SingleSchedule) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SingleSchedule) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// this is different from MM's SingleSchedule in that it is using google's Duration
type RepeatedSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This will be created by MJunct.  This will be empty coming into MJunct NB API.  Else, it should have a string value.
	JobId        string             `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Duration     *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`                               // should be between 1 second and 86400 seconds (24 hours worth of seconds)
	CronMinutes  string             `protobuf:"bytes,3,opt,name=cron_minutes,json=cronMinutes,proto3" json:"cron_minutes,omitempty"`      // cron style minutes (0-59)
	CronHours    string             `protobuf:"bytes,4,opt,name=cron_hours,json=cronHours,proto3" json:"cron_hours,omitempty"`            // cron style hours (0-23)
	CronDayMonth string             `protobuf:"bytes,5,opt,name=cron_day_month,json=cronDayMonth,proto3" json:"cron_day_month,omitempty"` // cron style day of month (0-31)
	CronMonth    string             `protobuf:"bytes,6,opt,name=cron_month,json=cronMonth,proto3" json:"cron_month,omitempty"`            // cron style month (1-12)
	CronDayWeek  string             `protobuf:"bytes,7,opt,name=cron_day_week,json=cronDayWeek,proto3" json:"cron_day_week,omitempty"`    // cron style day of week (0-6)
}

func (x *RepeatedSchedule) Reset() {
	*x = RepeatedSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedSchedule) ProtoMessage() {}

func (x *RepeatedSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedSchedule.ProtoReflect.Descriptor instead.
func (*RepeatedSchedule) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *RepeatedSchedule) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *RepeatedSchedule) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *RepeatedSchedule) GetCronMinutes() string {
	if x != nil {
		return x.CronMinutes
	}
	return ""
}

func (x *RepeatedSchedule) GetCronHours() string {
	if x != nil {
		return x.CronHours
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayMonth() string {
	if x != nil {
		return x.CronDayMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronMonth() string {
	if x != nil {
		return x.CronMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayWeek() string {
	if x != nil {
		return x.CronDayWeek
	}
	return ""
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreOperations  []*PreOperation       `protobuf:"bytes,1,rep,name=pre_operations,json=preOperations,proto3" json:"pre_operations,omitempty"`
	PostOperations []*PostOperation      `protobuf:"bytes,2,rep,name=post_operations,json=postOperations,proto3" json:"post_operations,omitempty"`
	ServiceType    Operation_ServiceType `protobuf:"varint,3,opt,name=service_type,json=serviceType,proto3,enum=common.v1.Operation_ServiceType" json:"service_type,omitempty"`
	// Types that are assignable to Operation:
	//
	//	*Operation_UpdateSystemSoftwareOperation
	//	*Operation_SetPowerStateOperation
	Operation isOperation_Operation `protobuf_oneof:"operation"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *Operation) GetPreOperations() []*PreOperation {
	if x != nil {
		return x.PreOperations
	}
	return nil
}

func (x *Operation) GetPostOperations() []*PostOperation {
	if x != nil {
		return x.PostOperations
	}
	return nil
}

func (x *Operation) GetServiceType() Operation_ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return Operation_SERVICE_TYPE_UNSPECIFIED
}

func (m *Operation) GetOperation() isOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *Operation) GetUpdateSystemSoftwareOperation() *UpdateSystemSoftwareOperation {
	if x, ok := x.GetOperation().(*Operation_UpdateSystemSoftwareOperation); ok {
		return x.UpdateSystemSoftwareOperation
	}
	return nil
}

func (x *Operation) GetSetPowerStateOperation() *SetPowerStateOperation {
	if x, ok := x.GetOperation().(*Operation_SetPowerStateOperation); ok {
		return x.SetPowerStateOperation
	}
	return nil
}

type isOperation_Operation interface {
	isOperation_Operation()
}

type Operation_UpdateSystemSoftwareOperation struct {
	UpdateSystemSoftwareOperation *UpdateSystemSoftwareOperation `protobuf:"bytes,4,opt,name=update_system_software_operation,json=updateSystemSoftwareOperation,proto3,oneof"`
}

type Operation_SetPowerStateOperation struct {
	SetPowerStateOperation *SetPowerStateOperation `protobuf:"bytes,5,opt,name=set_power_state_operation,json=setPowerStateOperation,proto3,oneof"` // and others
}

func (*Operation_UpdateSystemSoftwareOperation) isOperation_Operation() {}

func (*Operation_SetPowerStateOperation) isOperation_Operation() {}

type UpdateSystemSoftwareOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string                                     `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                                              // URL from which to remotely retrieve the package
	ReleaseDate *timestamp.Timestamp                       `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`                           // Release date of the new SW update.
	Mode        UpdateSystemSoftwareOperation_DownloadMode `protobuf:"varint,3,opt,name=mode,proto3,enum=common.v1.UpdateSystemSoftwareOperation_DownloadMode" json:"mode,omitempty"` // Mode for installing the softare update regarding download and install steps.
	DoNotReboot bool                                       `protobuf:"varint,4,opt,name=do_not_reboot,json=doNotReboot,proto3" json:"do_not_reboot,omitempty"`                        // Whether to reboot the node after the firmware update attempt
	PackageList []string                                   `protobuf:"bytes,5,rep,name=package_list,json=packageList,proto3" json:"package_list,omitempty"`                           // List of packages to install if whole package update isn't desired.
}

func (x *UpdateSystemSoftwareOperation) Reset() {
	*x = UpdateSystemSoftwareOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSystemSoftwareOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemSoftwareOperation) ProtoMessage() {}

func (x *UpdateSystemSoftwareOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemSoftwareOperation.ProtoReflect.Descriptor instead.
func (*UpdateSystemSoftwareOperation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSystemSoftwareOperation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateSystemSoftwareOperation) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *UpdateSystemSoftwareOperation) GetMode() UpdateSystemSoftwareOperation_DownloadMode {
	if x != nil {
		return x.Mode
	}
	return UpdateSystemSoftwareOperation_DOWNLOAD_MODE_UNSPECIFIED
}

func (x *UpdateSystemSoftwareOperation) GetDoNotReboot() bool {
	if x != nil {
		return x.DoNotReboot
	}
	return false
}

func (x *UpdateSystemSoftwareOperation) GetPackageList() []string {
	if x != nil {
		return x.PackageList
	}
	return nil
}

type SetPowerStateOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opcode SetPowerStateOperation_PowerState `protobuf:"varint,1,opt,name=opcode,proto3,enum=common.v1.SetPowerStateOperation_PowerState" json:"opcode,omitempty"`
}

func (x *SetPowerStateOperation) Reset() {
	*x = SetPowerStateOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPowerStateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPowerStateOperation) ProtoMessage() {}

func (x *SetPowerStateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPowerStateOperation.ProtoReflect.Descriptor instead.
func (*SetPowerStateOperation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *SetPowerStateOperation) GetOpcode() SetPowerStateOperation_PowerState {
	if x != nil {
		return x.Opcode
	}
	return SetPowerStateOperation_POWER_STATE_UNSPECIFIED
}

type PreOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreOperation) Reset() {
	*x = PreOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreOperation) ProtoMessage() {}

func (x *PreOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreOperation.ProtoReflect.Descriptor instead.
func (*PreOperation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{9}
}

type PostOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostOperation) Reset() {
	*x = PostOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOperation) ProtoMessage() {}

func (x *PostOperation) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOperation.ProtoReflect.Descriptor instead.
func (*PostOperation) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{10}
}

// this message represents a Job and can be used in multiple contexts; see RPC definitions
// for some definitions fields may be ignored; e.g., when reporting job status up from a node,
// the node_id is ignored and is filled in by INBS
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId            string               `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                 // UUID with abbreviated type
	NodeId           string               `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`              // UUID, references NODE(node_id)
	ScheduleId       int32                `protobuf:"varint,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"` // References SCHEDULE(schedule_id)
	ExecutedBy       Job_ExecutedBy       `protobuf:"varint,4,opt,name=executed_by,json=executedBy,proto3,enum=common.v1.Job_ExecutedBy" json:"executed_by,omitempty"`
	DesiredStartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=desired_start_time,json=desiredStartTime,proto3" json:"desired_start_time,omitempty"`
	ActualStartTime  *timestamp.Timestamp `protobuf:"bytes,6,opt,name=actual_start_time,json=actualStartTime,proto3" json:"actual_start_time,omitempty"`
	ActualEndTime    *timestamp.Timestamp `protobuf:"bytes,7,opt,name=actual_end_time,json=actualEndTime,proto3" json:"actual_end_time,omitempty"`
	JobState         Job_JobState         `protobuf:"varint,8,opt,name=job_state,json=jobState,proto3,enum=common.v1.Job_JobState" json:"job_state,omitempty"`
	StatusCode       int32                `protobuf:"varint,9,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // Not yet defined
	ResultMsgs       string               `protobuf:"bytes,10,opt,name=result_msgs,json=resultMsgs,proto3" json:"result_msgs,omitempty"` // JSON string for result messages of all tasks ran
	CreateTime       *timestamp.Timestamp `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_common_v1_common_proto_rawDescGZIP(), []int{11}
}

func (x *Job) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Job) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Job) GetScheduleId() int32 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *Job) GetExecutedBy() Job_ExecutedBy {
	if x != nil {
		return x.ExecutedBy
	}
	return Job_EXECUTED_BY_UNSPECIFIED
}

func (x *Job) GetDesiredStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.DesiredStartTime
	}
	return nil
}

func (x *Job) GetActualStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.ActualStartTime
	}
	return nil
}

func (x *Job) GetActualEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.ActualEndTime
	}
	return nil
}

func (x *Job) GetJobState() Job_JobState {
	if x != nil {
		return x.JobState
	}
	return Job_JOB_STATE_UNSPECIFIED
}

func (x *Job) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Job) GetResultMsgs() string {
	if x != nil {
		return x.ResultMsgs
	}
	return ""
}

func (x *Job) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_common_v1_common_proto protoreflect.FileDescriptor

var file_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x7b,
	0x0a, 0x12, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x08,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x6f,
	0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x6f, 0x6e,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d,
	0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x57, 0x65, 0x65, 0x6b,
	0x22, 0xc5, 0x04, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41,
	0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x73, 0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x1d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x19, 0x73,
	0x65, 0x74, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x42, 0x53, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4f, 0x4f, 0x42, 0x5f, 0x41, 0x4d, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4f, 0x42, 0x5f, 0x42,
	0x4d, 0x43, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x04, 0x42, 0x0b, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x03, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6f, 0x5f, 0x6e, 0x6f, 0x74,
	0x5f, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64,
	0x6f, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x85, 0x01,
	0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46,
	0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f,
	0x41, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4f,
	0x4e, 0x4c, 0x59, 0x10, 0x03, 0x22, 0xe1, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x44, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46,
	0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x0a, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x72, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x6f, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x05, 0x0a, 0x03, 0x4a,
	0x6f, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x48, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x0a, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45,
	0x44, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x4e, 0x42, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x4f, 0x42,
	0x10, 0x02, 0x22, 0x59, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_common_proto_rawDescOnce sync.Once
	file_common_v1_common_proto_rawDescData = file_common_v1_common_proto_rawDesc
)

func file_common_v1_common_proto_rawDescGZIP() []byte {
	file_common_v1_common_proto_rawDescOnce.Do(func() {
		file_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_common_proto_rawDescData)
	})
	return file_common_v1_common_proto_rawDescData
}

var file_common_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_common_v1_common_proto_goTypes = []interface{}{
	(Operation_ServiceType)(0),                      // 0: common.v1.Operation.ServiceType
	(UpdateSystemSoftwareOperation_DownloadMode)(0), // 1: common.v1.UpdateSystemSoftwareOperation.DownloadMode
	(SetPowerStateOperation_PowerState)(0),          // 2: common.v1.SetPowerStateOperation.PowerState
	(Job_ExecutedBy)(0),                             // 3: common.v1.Job.ExecutedBy
	(Job_JobState)(0),                               // 4: common.v1.Job.JobState
	(*Error)(nil),                                   // 5: common.v1.Error
	(*NodeScheduledOperations)(nil),                 // 6: common.v1.NodeScheduledOperations
	(*ScheduledOperation)(nil),                      // 7: common.v1.ScheduledOperation
	(*Schedule)(nil),                                // 8: common.v1.Schedule
	(*SingleSchedule)(nil),                          // 9: common.v1.SingleSchedule
	(*RepeatedSchedule)(nil),                        // 10: common.v1.RepeatedSchedule
	(*Operation)(nil),                               // 11: common.v1.Operation
	(*UpdateSystemSoftwareOperation)(nil),           // 12: common.v1.UpdateSystemSoftwareOperation
	(*SetPowerStateOperation)(nil),                  // 13: common.v1.SetPowerStateOperation
	(*PreOperation)(nil),                            // 14: common.v1.PreOperation
	(*PostOperation)(nil),                           // 15: common.v1.PostOperation
	(*Job)(nil),                                     // 16: common.v1.Job
	(*timestamp.Timestamp)(nil),                     // 17: google.protobuf.Timestamp
	(*duration.Duration)(nil),                       // 18: google.protobuf.Duration
}
var file_common_v1_common_proto_depIdxs = []int32{
	7,  // 0: common.v1.NodeScheduledOperations.scheduled_operations:type_name -> common.v1.ScheduledOperation
	11, // 1: common.v1.ScheduledOperation.operation:type_name -> common.v1.Operation
	8,  // 2: common.v1.ScheduledOperation.schedules:type_name -> common.v1.Schedule
	9,  // 3: common.v1.Schedule.single_schedule:type_name -> common.v1.SingleSchedule
	10, // 4: common.v1.Schedule.repeated_schedule:type_name -> common.v1.RepeatedSchedule
	17, // 5: common.v1.SingleSchedule.start_time:type_name -> google.protobuf.Timestamp
	17, // 6: common.v1.SingleSchedule.end_time:type_name -> google.protobuf.Timestamp
	18, // 7: common.v1.RepeatedSchedule.duration:type_name -> google.protobuf.Duration
	14, // 8: common.v1.Operation.pre_operations:type_name -> common.v1.PreOperation
	15, // 9: common.v1.Operation.post_operations:type_name -> common.v1.PostOperation
	0,  // 10: common.v1.Operation.service_type:type_name -> common.v1.Operation.ServiceType
	12, // 11: common.v1.Operation.update_system_software_operation:type_name -> common.v1.UpdateSystemSoftwareOperation
	13, // 12: common.v1.Operation.set_power_state_operation:type_name -> common.v1.SetPowerStateOperation
	17, // 13: common.v1.UpdateSystemSoftwareOperation.release_date:type_name -> google.protobuf.Timestamp
	1,  // 14: common.v1.UpdateSystemSoftwareOperation.mode:type_name -> common.v1.UpdateSystemSoftwareOperation.DownloadMode
	2,  // 15: common.v1.SetPowerStateOperation.opcode:type_name -> common.v1.SetPowerStateOperation.PowerState
	3,  // 16: common.v1.Job.executed_by:type_name -> common.v1.Job.ExecutedBy
	17, // 17: common.v1.Job.desired_start_time:type_name -> google.protobuf.Timestamp
	17, // 18: common.v1.Job.actual_start_time:type_name -> google.protobuf.Timestamp
	17, // 19: common.v1.Job.actual_end_time:type_name -> google.protobuf.Timestamp
	4,  // 20: common.v1.Job.job_state:type_name -> common.v1.Job.JobState
	17, // 21: common.v1.Job.create_time:type_name -> google.protobuf.Timestamp
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_common_v1_common_proto_init() }
func file_common_v1_common_proto_init() {
	if File_common_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeScheduledOperations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSystemSoftwareOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPowerStateOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_v1_common_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Schedule_SingleSchedule)(nil),
		(*Schedule_RepeatedSchedule)(nil),
	}
	file_common_v1_common_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Operation_UpdateSystemSoftwareOperation)(nil),
		(*Operation_SetPowerStateOperation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_common_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_common_proto_goTypes,
		DependencyIndexes: file_common_v1_common_proto_depIdxs,
		EnumInfos:         file_common_v1_common_proto_enumTypes,
		MessageInfos:      file_common_v1_common_proto_msgTypes,
	}.Build()
	File_common_v1_common_proto = out.File
	file_common_v1_common_proto_rawDesc = nil
	file_common_v1_common_proto_goTypes = nil
	file_common_v1_common_proto_depIdxs = nil
}
