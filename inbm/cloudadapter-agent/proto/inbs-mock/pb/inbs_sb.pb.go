// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: inbs_sb.proto

package pb

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Url_Scheme int32

const (
	Url_SCHEME_UNSPECIFIED Url_Scheme = 0 // Default value.  This will produce an error
	Url_SCHEME_HTTPS       Url_Scheme = 1 // HyperText Transfer Protocol Secure
	Url_SCHEME_FTP         Url_Scheme = 2 // File transfer protocol
	Url_SCHEME_FILE        Url_Scheme = 3 // Host-Specific File Names
)

// Enum value maps for Url_Scheme.
var (
	Url_Scheme_name = map[int32]string{
		0: "SCHEME_UNSPECIFIED",
		1: "SCHEME_HTTPS",
		2: "SCHEME_FTP",
		3: "SCHEME_FILE",
	}
	Url_Scheme_value = map[string]int32{
		"SCHEME_UNSPECIFIED": 0,
		"SCHEME_HTTPS":       1,
		"SCHEME_FTP":         2,
		"SCHEME_FILE":        3,
	}
)

func (x Url_Scheme) Enum() *Url_Scheme {
	p := new(Url_Scheme)
	*p = x
	return p
}

func (x Url_Scheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Url_Scheme) Descriptor() protoreflect.EnumDescriptor {
	return file_inbs_sb_proto_enumTypes[0].Descriptor()
}

func (Url_Scheme) Type() protoreflect.EnumType {
	return &file_inbs_sb_proto_enumTypes[0]
}

func (x Url_Scheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Url_Scheme.Descriptor instead.
func (Url_Scheme) EnumDescriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{11, 0}
}

type DownloadMode_Mode int32

const (
	DownloadMode_MODE_UNSPECIFIED   DownloadMode_Mode = 0
	DownloadMode_MODE_FULL          DownloadMode_Mode = 1 // Both download the package and install the package
	DownloadMode_MODE_NO_DOWNLOAD   DownloadMode_Mode = 2 // Do not download the package.  Only install.
	DownloadMode_MODE_DOWNLOAD_ONLY DownloadMode_Mode = 3 // Only download the package.  Do not install.
)

// Enum value maps for DownloadMode_Mode.
var (
	DownloadMode_Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_FULL",
		2: "MODE_NO_DOWNLOAD",
		3: "MODE_DOWNLOAD_ONLY",
	}
	DownloadMode_Mode_value = map[string]int32{
		"MODE_UNSPECIFIED":   0,
		"MODE_FULL":          1,
		"MODE_NO_DOWNLOAD":   2,
		"MODE_DOWNLOAD_ONLY": 3,
	}
)

func (x DownloadMode_Mode) Enum() *DownloadMode_Mode {
	p := new(DownloadMode_Mode)
	*p = x
	return p
}

func (x DownloadMode_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadMode_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_inbs_sb_proto_enumTypes[1].Descriptor()
}

func (DownloadMode_Mode) Type() protoreflect.EnumType {
	return &file_inbs_sb_proto_enumTypes[1]
}

func (x DownloadMode_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadMode_Mode.Descriptor instead.
func (DownloadMode_Mode) EnumDescriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{12, 0}
}

type HandleINBMCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Request:
	//	*HandleINBMCommandRequest_PingRequest
	//	*HandleINBMCommandRequest_UpdateScheduledTasksRequest
	Request isHandleINBMCommandRequest_Request `protobuf_oneof:"request"`
}

func (x *HandleINBMCommandRequest) Reset() {
	*x = HandleINBMCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleINBMCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleINBMCommandRequest) ProtoMessage() {}

func (x *HandleINBMCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleINBMCommandRequest.ProtoReflect.Descriptor instead.
func (*HandleINBMCommandRequest) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{0}
}

func (x *HandleINBMCommandRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *HandleINBMCommandRequest) GetRequest() isHandleINBMCommandRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *HandleINBMCommandRequest) GetPingRequest() *PingRequest {
	if x, ok := x.GetRequest().(*HandleINBMCommandRequest_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

func (x *HandleINBMCommandRequest) GetUpdateScheduledTasksRequest() *UpdateScheduledTasksRequest {
	if x, ok := x.GetRequest().(*HandleINBMCommandRequest_UpdateScheduledTasksRequest); ok {
		return x.UpdateScheduledTasksRequest
	}
	return nil
}

type isHandleINBMCommandRequest_Request interface {
	isHandleINBMCommandRequest_Request()
}

type HandleINBMCommandRequest_PingRequest struct {
	PingRequest *PingRequest `protobuf:"bytes,2,opt,name=ping_request,json=pingRequest,proto3,oneof"`
}

type HandleINBMCommandRequest_UpdateScheduledTasksRequest struct {
	UpdateScheduledTasksRequest *UpdateScheduledTasksRequest `protobuf:"bytes,3,opt,name=update_scheduled_tasks_request,json=updateScheduledTasksRequest,proto3,oneof"`
}

func (*HandleINBMCommandRequest_PingRequest) isHandleINBMCommandRequest_Request() {}

func (*HandleINBMCommandRequest_UpdateScheduledTasksRequest) isHandleINBMCommandRequest_Request() {}

type HandleINBMCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Response:
	//	*HandleINBMCommandResponse_PingResponse
	//	*HandleINBMCommandResponse_UpdateScheduledTasksResponse
	Response isHandleINBMCommandResponse_Response `protobuf_oneof:"response"`
}

func (x *HandleINBMCommandResponse) Reset() {
	*x = HandleINBMCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleINBMCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleINBMCommandResponse) ProtoMessage() {}

func (x *HandleINBMCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleINBMCommandResponse.ProtoReflect.Descriptor instead.
func (*HandleINBMCommandResponse) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{1}
}

func (x *HandleINBMCommandResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *HandleINBMCommandResponse) GetResponse() isHandleINBMCommandResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *HandleINBMCommandResponse) GetPingResponse() *PingResponse {
	if x, ok := x.GetResponse().(*HandleINBMCommandResponse_PingResponse); ok {
		return x.PingResponse
	}
	return nil
}

func (x *HandleINBMCommandResponse) GetUpdateScheduledTasksResponse() *UpdateScheduledTasksResponse {
	if x, ok := x.GetResponse().(*HandleINBMCommandResponse_UpdateScheduledTasksResponse); ok {
		return x.UpdateScheduledTasksResponse
	}
	return nil
}

type isHandleINBMCommandResponse_Response interface {
	isHandleINBMCommandResponse_Response()
}

type HandleINBMCommandResponse_PingResponse struct {
	PingResponse *PingResponse `protobuf:"bytes,2,opt,name=ping_response,json=pingResponse,proto3,oneof"`
}

type HandleINBMCommandResponse_UpdateScheduledTasksResponse struct {
	UpdateScheduledTasksResponse *UpdateScheduledTasksResponse `protobuf:"bytes,3,opt,name=update_scheduled_tasks_response,json=updateScheduledTasksResponse,proto3,oneof"`
}

func (*HandleINBMCommandResponse_PingResponse) isHandleINBMCommandResponse_Response() {}

func (*HandleINBMCommandResponse_UpdateScheduledTasksResponse) isHandleINBMCommandResponse_Response() {
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{2}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{3}
}

type UpdateScheduledTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*ScheduledTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *UpdateScheduledTasksRequest) Reset() {
	*x = UpdateScheduledTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduledTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduledTasksRequest) ProtoMessage() {}

func (x *UpdateScheduledTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduledTasksRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduledTasksRequest) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateScheduledTasksRequest) GetTasks() []*ScheduledTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type UpdateScheduledTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateScheduledTasksResponse) Reset() {
	*x = UpdateScheduledTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScheduledTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduledTasksResponse) ProtoMessage() {}

func (x *UpdateScheduledTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduledTasksResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduledTasksResponse) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{5}
}

type ScheduledTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *Operation  `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	Schedules []*Schedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *ScheduledTask) Reset() {
	*x = ScheduledTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTask) ProtoMessage() {}

func (x *ScheduledTask) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTask.ProtoReflect.Descriptor instead.
func (*ScheduledTask) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{6}
}

func (x *ScheduledTask) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ScheduledTask) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreOperations  []*PreOperation  `protobuf:"bytes,1,rep,name=pre_operations,json=preOperations,proto3" json:"pre_operations,omitempty"`
	PostOperations []*PostOperation `protobuf:"bytes,2,rep,name=post_operations,json=postOperations,proto3" json:"post_operations,omitempty"`
	// Types that are assignable to OperationType:
	//	*Operation_UpdateSystemSoftwareRequest
	OperationType isOperation_OperationType `protobuf_oneof:"operation_type"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{7}
}

func (x *Operation) GetPreOperations() []*PreOperation {
	if x != nil {
		return x.PreOperations
	}
	return nil
}

func (x *Operation) GetPostOperations() []*PostOperation {
	if x != nil {
		return x.PostOperations
	}
	return nil
}

func (m *Operation) GetOperationType() isOperation_OperationType {
	if m != nil {
		return m.OperationType
	}
	return nil
}

func (x *Operation) GetUpdateSystemSoftwareRequest() *UpdateSystemSoftwareRequest {
	if x, ok := x.GetOperationType().(*Operation_UpdateSystemSoftwareRequest); ok {
		return x.UpdateSystemSoftwareRequest
	}
	return nil
}

type isOperation_OperationType interface {
	isOperation_OperationType()
}

type Operation_UpdateSystemSoftwareRequest struct {
	UpdateSystemSoftwareRequest *UpdateSystemSoftwareRequest `protobuf:"bytes,3,opt,name=update_system_software_request,json=updateSystemSoftwareRequest,proto3,oneof"` // ...
}

func (*Operation_UpdateSystemSoftwareRequest) isOperation_OperationType() {}

type PreOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreOperation) Reset() {
	*x = PreOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreOperation) ProtoMessage() {}

func (x *PreOperation) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreOperation.ProtoReflect.Descriptor instead.
func (*PreOperation) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{8}
}

type PostOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostOperation) Reset() {
	*x = PostOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOperation) ProtoMessage() {}

func (x *PostOperation) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOperation.ProtoReflect.Descriptor instead.
func (*PostOperation) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{9}
}

type UpdateSystemSoftwareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         *Url                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                       // URL from which to remotely retrieve the package
	ReleaseDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`    // Release date of the new SW update.
	Mode        *DownloadMode        `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`                                     // Mode for installing the softare update regarding download and install steps.
	DoNotReboot bool                 `protobuf:"varint,4,opt,name=do_not_reboot,json=doNotReboot,proto3" json:"do_not_reboot,omitempty"` // Whether to reboot the node after the firmware update attempt
	PackageList []string             `protobuf:"bytes,5,rep,name=package_list,json=packageList,proto3" json:"package_list,omitempty"`    // List of packages to install if whole package update isn't desired.
}

func (x *UpdateSystemSoftwareRequest) Reset() {
	*x = UpdateSystemSoftwareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSystemSoftwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemSoftwareRequest) ProtoMessage() {}

func (x *UpdateSystemSoftwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemSoftwareRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemSoftwareRequest) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateSystemSoftwareRequest) GetUrl() *Url {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *UpdateSystemSoftwareRequest) GetReleaseDate() *timestamp.Timestamp {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *UpdateSystemSoftwareRequest) GetMode() *DownloadMode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *UpdateSystemSoftwareRequest) GetDoNotReboot() bool {
	if x != nil {
		return x.DoNotReboot
	}
	return false
}

func (x *UpdateSystemSoftwareRequest) GetPackageList() []string {
	if x != nil {
		return x.PackageList
	}
	return nil
}

// Defines the URL structure
type Url struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheme   Url_Scheme `protobuf:"varint,1,opt,name=scheme,proto3,enum=inbs.v1.Url_Scheme" json:"scheme,omitempty"` // URL Scheme such as https://
	Address  string     `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                        // Contains domain, path, port, query, and fragment of the address
	Username string     `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                      // Username if required to retrieve the file
}

func (x *Url) Reset() {
	*x = Url{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{11}
}

func (x *Url) GetScheme() Url_Scheme {
	if x != nil {
		return x.Scheme
	}
	return Url_SCHEME_UNSPECIFIED
}

func (x *Url) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Url) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Specifies the mode for installing the Software update.  This allows for the steps of downloading
// and installing to be seperated into two different actions.
type DownloadMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode DownloadMode_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=inbs.v1.DownloadMode_Mode" json:"mode,omitempty"` // Mode for installing the Software update.
}

func (x *DownloadMode) Reset() {
	*x = DownloadMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadMode) ProtoMessage() {}

func (x *DownloadMode) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadMode.ProtoReflect.Descriptor instead.
func (*DownloadMode) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{12}
}

func (x *DownloadMode) GetMode() DownloadMode_Mode {
	if x != nil {
		return x.Mode
	}
	return DownloadMode_MODE_UNSPECIFIED
}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Schedule:
	//	*Schedule_SingleSchedule
	//	*Schedule_RepeatedSchedule
	Schedule isSchedule_Schedule `protobuf_oneof:"schedule"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{13}
}

func (m *Schedule) GetSchedule() isSchedule_Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (x *Schedule) GetSingleSchedule() *SingleSchedule {
	if x, ok := x.GetSchedule().(*Schedule_SingleSchedule); ok {
		return x.SingleSchedule
	}
	return nil
}

func (x *Schedule) GetRepeatedSchedule() *RepeatedSchedule {
	if x, ok := x.GetSchedule().(*Schedule_RepeatedSchedule); ok {
		return x.RepeatedSchedule
	}
	return nil
}

type isSchedule_Schedule interface {
	isSchedule_Schedule()
}

type Schedule_SingleSchedule struct {
	SingleSchedule *SingleSchedule `protobuf:"bytes,1,opt,name=single_schedule,json=singleSchedule,proto3,oneof"`
}

type Schedule_RepeatedSchedule struct {
	RepeatedSchedule *RepeatedSchedule `protobuf:"bytes,2,opt,name=repeated_schedule,json=repeatedSchedule,proto3,oneof"`
}

func (*Schedule_SingleSchedule) isSchedule_Schedule() {}

func (*Schedule_RepeatedSchedule) isSchedule_Schedule() {}

type SingleSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SingleSchedule) Reset() {
	*x = SingleSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleSchedule) ProtoMessage() {}

func (x *SingleSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleSchedule.ProtoReflect.Descriptor instead.
func (*SingleSchedule) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{14}
}

func (x *SingleSchedule) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SingleSchedule) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type RepeatedSchedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration     *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`                               // should be between 1 second and 86400 seconds (24 hours worth of seconds)
	CronMinutes  string             `protobuf:"bytes,2,opt,name=cron_minutes,json=cronMinutes,proto3" json:"cron_minutes,omitempty"`      // cron style minutes (0-59)
	CronHours    string             `protobuf:"bytes,3,opt,name=cron_hours,json=cronHours,proto3" json:"cron_hours,omitempty"`            // cron style hours (0-23)
	CronDayMonth string             `protobuf:"bytes,4,opt,name=cron_day_month,json=cronDayMonth,proto3" json:"cron_day_month,omitempty"` // cron style day of month (0-31)
	CronMonth    string             `protobuf:"bytes,5,opt,name=cron_month,json=cronMonth,proto3" json:"cron_month,omitempty"`            // cron style month (1-12)
	CronDayWeek  string             `protobuf:"bytes,6,opt,name=cron_day_week,json=cronDayWeek,proto3" json:"cron_day_week,omitempty"`    // cron style day of week (0-6)
}

func (x *RepeatedSchedule) Reset() {
	*x = RepeatedSchedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inbs_sb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedSchedule) ProtoMessage() {}

func (x *RepeatedSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_inbs_sb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedSchedule.ProtoReflect.Descriptor instead.
func (*RepeatedSchedule) Descriptor() ([]byte, []int) {
	return file_inbs_sb_proto_rawDescGZIP(), []int{15}
}

func (x *RepeatedSchedule) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *RepeatedSchedule) GetCronMinutes() string {
	if x != nil {
		return x.CronMinutes
	}
	return ""
}

func (x *RepeatedSchedule) GetCronHours() string {
	if x != nil {
		return x.CronHours
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayMonth() string {
	if x != nil {
		return x.CronDayMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronMonth() string {
	if x != nil {
		return x.CronMonth
	}
	return ""
}

func (x *RepeatedSchedule) GetCronDayWeek() string {
	if x != nil {
		return x.CronDayWeek
	}
	return ""
}

var File_inbs_sb_proto protoreflect.FileDescriptor

var file_inbs_sb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x62, 0x73, 0x5f, 0x73, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x49, 0x4e, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e,
	0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x6b, 0x0a, 0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x1b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x19, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x49, 0x4e, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69,
	0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69,
	0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e,
	0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69,
	0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x0d, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0x89, 0x02, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0e, 0x70, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x6f,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6b, 0x0a, 0x1e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x50,
	0x72, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xee, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x6e, 0x62, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x62, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6f, 0x5f, 0x6e, 0x6f, 0x74,
	0x5f, 0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64,
	0x6f, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xbd, 0x01,
	0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x72, 0x6c, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x46, 0x54, 0x50, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x99, 0x01,
	0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69,
	0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x59,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x72, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x79, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x57, 0x65, 0x65, 0x6b, 0x32, 0x6f, 0x0a, 0x0d,
	0x49, 0x4e, 0x42, 0x53, 0x53, 0x42, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a,
	0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x4e, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x49, 0x4e, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x21, 0x2e, 0x69, 0x6e, 0x62, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x4e, 0x42, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inbs_sb_proto_rawDescOnce sync.Once
	file_inbs_sb_proto_rawDescData = file_inbs_sb_proto_rawDesc
)

func file_inbs_sb_proto_rawDescGZIP() []byte {
	file_inbs_sb_proto_rawDescOnce.Do(func() {
		file_inbs_sb_proto_rawDescData = protoimpl.X.CompressGZIP(file_inbs_sb_proto_rawDescData)
	})
	return file_inbs_sb_proto_rawDescData
}

var file_inbs_sb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_inbs_sb_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_inbs_sb_proto_goTypes = []interface{}{
	(Url_Scheme)(0),                      // 0: inbs.v1.Url.Scheme
	(DownloadMode_Mode)(0),               // 1: inbs.v1.DownloadMode.Mode
	(*HandleINBMCommandRequest)(nil),     // 2: inbs.v1.HandleINBMCommandRequest
	(*HandleINBMCommandResponse)(nil),    // 3: inbs.v1.HandleINBMCommandResponse
	(*PingRequest)(nil),                  // 4: inbs.v1.PingRequest
	(*PingResponse)(nil),                 // 5: inbs.v1.PingResponse
	(*UpdateScheduledTasksRequest)(nil),  // 6: inbs.v1.UpdateScheduledTasksRequest
	(*UpdateScheduledTasksResponse)(nil), // 7: inbs.v1.UpdateScheduledTasksResponse
	(*ScheduledTask)(nil),                // 8: inbs.v1.ScheduledTask
	(*Operation)(nil),                    // 9: inbs.v1.Operation
	(*PreOperation)(nil),                 // 10: inbs.v1.PreOperation
	(*PostOperation)(nil),                // 11: inbs.v1.PostOperation
	(*UpdateSystemSoftwareRequest)(nil),  // 12: inbs.v1.UpdateSystemSoftwareRequest
	(*Url)(nil),                          // 13: inbs.v1.Url
	(*DownloadMode)(nil),                 // 14: inbs.v1.DownloadMode
	(*Schedule)(nil),                     // 15: inbs.v1.Schedule
	(*SingleSchedule)(nil),               // 16: inbs.v1.SingleSchedule
	(*RepeatedSchedule)(nil),             // 17: inbs.v1.RepeatedSchedule
	(*timestamp.Timestamp)(nil),          // 18: google.protobuf.Timestamp
	(*duration.Duration)(nil),            // 19: google.protobuf.Duration
}
var file_inbs_sb_proto_depIdxs = []int32{
	4,  // 0: inbs.v1.HandleINBMCommandRequest.ping_request:type_name -> inbs.v1.PingRequest
	6,  // 1: inbs.v1.HandleINBMCommandRequest.update_scheduled_tasks_request:type_name -> inbs.v1.UpdateScheduledTasksRequest
	5,  // 2: inbs.v1.HandleINBMCommandResponse.ping_response:type_name -> inbs.v1.PingResponse
	7,  // 3: inbs.v1.HandleINBMCommandResponse.update_scheduled_tasks_response:type_name -> inbs.v1.UpdateScheduledTasksResponse
	8,  // 4: inbs.v1.UpdateScheduledTasksRequest.tasks:type_name -> inbs.v1.ScheduledTask
	9,  // 5: inbs.v1.ScheduledTask.operation:type_name -> inbs.v1.Operation
	15, // 6: inbs.v1.ScheduledTask.schedules:type_name -> inbs.v1.Schedule
	10, // 7: inbs.v1.Operation.pre_operations:type_name -> inbs.v1.PreOperation
	11, // 8: inbs.v1.Operation.post_operations:type_name -> inbs.v1.PostOperation
	12, // 9: inbs.v1.Operation.update_system_software_request:type_name -> inbs.v1.UpdateSystemSoftwareRequest
	13, // 10: inbs.v1.UpdateSystemSoftwareRequest.url:type_name -> inbs.v1.Url
	18, // 11: inbs.v1.UpdateSystemSoftwareRequest.release_date:type_name -> google.protobuf.Timestamp
	14, // 12: inbs.v1.UpdateSystemSoftwareRequest.mode:type_name -> inbs.v1.DownloadMode
	0,  // 13: inbs.v1.Url.scheme:type_name -> inbs.v1.Url.Scheme
	1,  // 14: inbs.v1.DownloadMode.mode:type_name -> inbs.v1.DownloadMode.Mode
	16, // 15: inbs.v1.Schedule.single_schedule:type_name -> inbs.v1.SingleSchedule
	17, // 16: inbs.v1.Schedule.repeated_schedule:type_name -> inbs.v1.RepeatedSchedule
	18, // 17: inbs.v1.SingleSchedule.start_time:type_name -> google.protobuf.Timestamp
	18, // 18: inbs.v1.SingleSchedule.end_time:type_name -> google.protobuf.Timestamp
	19, // 19: inbs.v1.RepeatedSchedule.duration:type_name -> google.protobuf.Duration
	3,  // 20: inbs.v1.INBSSBService.HandleINBMCommand:input_type -> inbs.v1.HandleINBMCommandResponse
	2,  // 21: inbs.v1.INBSSBService.HandleINBMCommand:output_type -> inbs.v1.HandleINBMCommandRequest
	21, // [21:22] is the sub-list for method output_type
	20, // [20:21] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_inbs_sb_proto_init() }
func file_inbs_sb_proto_init() {
	if File_inbs_sb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inbs_sb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleINBMCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleINBMCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduledTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScheduledTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSystemSoftwareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Url); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inbs_sb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedSchedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_inbs_sb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*HandleINBMCommandRequest_PingRequest)(nil),
		(*HandleINBMCommandRequest_UpdateScheduledTasksRequest)(nil),
	}
	file_inbs_sb_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*HandleINBMCommandResponse_PingResponse)(nil),
		(*HandleINBMCommandResponse_UpdateScheduledTasksResponse)(nil),
	}
	file_inbs_sb_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Operation_UpdateSystemSoftwareRequest)(nil),
	}
	file_inbs_sb_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Schedule_SingleSchedule)(nil),
		(*Schedule_RepeatedSchedule)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inbs_sb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inbs_sb_proto_goTypes,
		DependencyIndexes: file_inbs_sb_proto_depIdxs,
		EnumInfos:         file_inbs_sb_proto_enumTypes,
		MessageInfos:      file_inbs_sb_proto_msgTypes,
	}.Build()
	File_inbs_sb_proto = out.File
	file_inbs_sb_proto_rawDesc = nil
	file_inbs_sb_proto_goTypes = nil
	file_inbs_sb_proto_depIdxs = nil
}
