syntax = "proto3";

package inbs.v1;
import "google/protobuf/timestamp.proto";


// TODO: get this validate.proto import working. Maybe use the 'buf' tool as maintenance manager does?
// import "validate/validate.proto";

service INBSSBService {
  // Bi-directional streaming method
  rpc INBMCommand(stream INBMResponse) returns (stream INBMRequest);
}

message INBMRequest {
  string request_id = 1;
  INBMRequestPayload request_data = 2;
}

message INBMResponse {  
  string request_id = 1;
  INBMResponsePayload response_data = 2;
}

message INBMRequestPayload {
  oneof payload {
    PingRequestPayload ping_request = 1;
    SetSOTAScheduleRequestPayload set_sota_schedule_request = 2;
  }
}

message INBMResponsePayload {
  oneof payload {
    PingResponsePayload ping_response = 1;
    SetSOTAScheduleResponsePayload set_sota_schedule_response = 2;
  }
}

message PingRequestPayload {
}

message PingResponsePayload {
}

// TODO: re-add the validate.rules from maintenance manager to the repeated_schedules fields. prerequisite: get the validate.proto import working
// 
message SetSOTAScheduleRequestPayload {
  message UpdateSource {
    string kernel_command = 1; // Kernel command line
    string os_repo_url = 2; // 'DEB822 Source Format' url to the public repository
    repeated string custom_repos = 3; // 'DEB822 Source Format' entries for Debian style OSs
  }
  UpdateSource update_source = 1;

  message UpdateSchedule {
    message SingleSchedule {
      google.protobuf.Timestamp start_time = 1; // Start time for the schedule (required)
      google.protobuf.Timestamp end_time = 2; // Start time for the schedule (optional)
    }
    repeated SingleSchedule single_schedules = 1;

    message RepeatedSchedule {
      uint32 duration_seconds = 1;  // between 1 second and 86400 seconds (24 hours worth of seconds)
      string cron_minutes = 2;  // cron style minutes (0-59)
      string cron_hours = 3; // cron style hours (0-23)
      string cron_day_month = 4;  // cron style day of month (0-31)
      string cron_month = 5;  // cron style month (1-12)
      string cron_day_week = 6;  // cron style day of week (0-6)
    }
    repeated RepeatedSchedule repeated_schedules = 2;
  }
  UpdateSchedule update_schedule = 2;

  string installed_packages = 3; // Freeform text, OS-dependent. A list of package names, one per line (newline separated). Should not contain version info.
}


message SetSOTAScheduleResponsePayload {  
  enum StatusType {
    STATUS_TYPE_UNSPECIFIED = 0;
    STATUS_TYPE_UP_TO_DATE = 1;
    STATUS_TYPE_STARTED = 2;
    STATUS_TYPE_UPDATED = 3;
    STATUS_TYPE_FAILED = 4;
  }
  StatusType status_type = 1;
}

