# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import inbs_sb_pb2 as proto_dot_inbs__sb__pb2


class INBSSBServiceStub(object):
    """TODO: get this validate.proto import working. Maybe use the 'buf' tool as maintenance manager does?
    import "validate/validate.proto";

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleINBMCommand = channel.stream_stream(
                '/inbs.v1.INBSSBService/HandleINBMCommand',
                request_serializer=proto_dot_inbs__sb__pb2.HandleINBMCommandResponse.SerializeToString,
                response_deserializer=proto_dot_inbs__sb__pb2.HandleINBMCommandRequest.FromString,
                )


class INBSSBServiceServicer(object):
    """TODO: get this validate.proto import working. Maybe use the 'buf' tool as maintenance manager does?
    import "validate/validate.proto";

    """

    def HandleINBMCommand(self, request_iterator, context):
        """Bi-directional streaming method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_INBSSBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleINBMCommand': grpc.stream_stream_rpc_method_handler(
                    servicer.HandleINBMCommand,
                    request_deserializer=proto_dot_inbs__sb__pb2.HandleINBMCommandResponse.FromString,
                    response_serializer=proto_dot_inbs__sb__pb2.HandleINBMCommandRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'inbs.v1.INBSSBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class INBSSBService(object):
    """TODO: get this validate.proto import working. Maybe use the 'buf' tool as maintenance manager does?
    import "validate/validate.proto";

    """

    @staticmethod
    def HandleINBMCommand(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/inbs.v1.INBSSBService/HandleINBMCommand',
            proto_dot_inbs__sb__pb2.HandleINBMCommandResponse.SerializeToString,
            proto_dot_inbs__sb__pb2.HandleINBMCommandRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
