# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from cloudadapter.pb.inbs.v1 import inbs_sb_pb2 as inbs_dot_v1_dot_inbs__sb__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in cloudadapter.pb.inbs.v1/inbs_sb_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class INBSSBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleINBMCommand = channel.stream_stream(
                '/inbs.v1.INBSSBService/HandleINBMCommand',
                request_serializer=inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandResponse.SerializeToString,
                response_deserializer=inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandRequest.FromString,
                _registered_method=True)
        self.SendNodeUpdate = channel.unary_unary(
                '/inbs.v1.INBSSBService/SendNodeUpdate',
                request_serializer=inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateRequest.SerializeToString,
                response_deserializer=inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateResponse.FromString,
                _registered_method=True)


class INBSSBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def HandleINBMCommand(self, request_iterator, context):
        """Bi-directional streaming method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendNodeUpdate(self, request, context):
        """Used to send any kind of node status update
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_INBSSBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleINBMCommand': grpc.stream_stream_rpc_method_handler(
                    servicer.HandleINBMCommand,
                    request_deserializer=inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandResponse.FromString,
                    response_serializer=inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandRequest.SerializeToString,
            ),
            'SendNodeUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.SendNodeUpdate,
                    request_deserializer=inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateRequest.FromString,
                    response_serializer=inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'inbs.v1.INBSSBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('inbs.v1.INBSSBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class INBSSBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def HandleINBMCommand(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/inbs.v1.INBSSBService/HandleINBMCommand',
            inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandResponse.SerializeToString,
            inbs_dot_v1_dot_inbs__sb__pb2.HandleINBMCommandRequest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendNodeUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/inbs.v1.INBSSBService/SendNodeUpdate',
            inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateRequest.SerializeToString,
            inbs_dot_v1_dot_inbs__sb__pb2.SendNodeUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
